version: '3.4'

services:
  sensorapi.api:
    image: ${DOCKER_REGISTRY-}sensorapiapi
    build:
      context: .
      dockerfile: src/SensorApi.Api/Dockerfile
    depends_on:
      - rabbitmq
    networks:
      - architectchallenge
  prometheus:
    image: prom/prometheus:v2.49.1
    ports:
      - "9090:9090"
    networks:
      - architectchallenge
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.15
    ports:
      - "3000:3000"
    networks:
      - architectchallenge

  rabbitmq:
    image: rabbitmq:3.13.0-management
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672"
      - "5672:5672" 
    networks:
      - architectchallenge
    environment:
      RABBITMQ_DEFAULT_USER: logUser
      RABBITMQ_DEFAULT_PASS: logPwd

  influxdb:
    image: influxdb:2.0.7
    environment:
        DOCKER_INFLUXDB_INIT_MODE: setup
        DOCKER_INFLUXDB_INIT_USERNAME: admin
        DOCKER_INFLUXDB_INIT_PASSWORD: admin1234
        DOCKER_INFLUXDB_INIT_ORG: iot
        DOCKER_INFLUXDB_INIT_BUCKET: users_business_events
        DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: F-QFQpmCL9UkR3qyoXnLkzWj03s6m4eCvYgDl1ePfHBf9ph7yxaSgQ6WN0i9giNgRTfONwVMK1f977r_g71oNQ==
    ports:
    - "8086:8086"
    networks:
      - architectchallenge

  worker:
    image: fabricioveronez/sensor-worker:v1
    environment:
      INFLUXDB_TOKEN: F-QFQpmCL9UkR3qyoXnLkzWj03s6m4eCvYgDl1ePfHBf9ph7yxaSgQ6WN0i9giNgRTfONwVMK1f977r_g71oNQ==
      INFLUXDB_BUCKET: users_business_events
      INFLUXDB_ORG: iot
      INFLUXDB_URL: http://influxdb:8086
      RABBITMQ_URL: "amqp://logUser:logPwd@rabbitmq:5672"
      RABBITMQ_QUEUE: "sensor-event"
    networks:
      - architectchallenge

volumes:
  mq_data:

networks:
  architectchallenge:
    driver: bridge